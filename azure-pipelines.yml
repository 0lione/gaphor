trigger:
  branches:
    include:
      - '*'
      - refs/tags/*

variables:
  System.Debug: true

jobs:
  - job: Lint
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
        set -e
        rm -rf $AGENT_TOOLSDIRECTORY/Python/3.7.3
        azcopy --recursive \
          --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux/Python/3.7.2 \
          --destination $AGENT_TOOLSDIRECTORY/Python/3.7.2
        original_directory=$PWD
        setups=$(find $AGENT_TOOLSDIRECTORY/Python -name setup.sh)
        for setup in $setups; do
            chmod +x $setup;
            cd $(dirname $setup);
            ./$(basename $setup);
            cd $original_directory;
        done;
        displayName: 'Workaround: roll back Python versions'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'

      - script: |
          pip install pre-commit
          pre-commit install-hooks
          pre-commit run --all-files

  - job: Windows
    dependsOn: Lint
    condition: succeeded()
    timeoutInMinutes: 60
    pool:
      vmImage: vs2017-win2016
    variables:
      MSYSTEM: MINGW64
      MSYS2_ARCH: x86_64

    steps:
      - script: |
          set MSYS2_ROOT=%CD:~0,2%\msys64
          choco install msys2 --params="/InstallDir:%MSYS2_ROOT% /NoUpdate /NoPath"
        displayName: Install MSYS2

      - script: |
          set MSYS2_ROOT=%CD:~0,2%\msys64
          git clone https://github.com/userzimmermann/MSYS2-cmd.git %MSYS2_ROOT%\cmd
          %MSYS2_ROOT%\cmd\msystem MSYS
        displayName: Install and Activate MSYS2-cmd

      - script: |
          set MSYS2_ROOT=%CD:~0,2%\msys64
          %MSYS2_ROOT%\cmd\msystem MSYS
          pacman --noconfirm -Syyuu
          pacman --noconfirm -Syuu
        displayName: Update MSYS2

      - script: |
          set MSYS2_ROOT=%CD:~0,2%\msys64
          %MSYS2_ROOT%\cmd\msystem MSYS
          bash -c ".azure/msys2-install.sh"
        displayName: Install Dependencies
        env:
          MSYS2_ARCH: $(MSYS2_ARCH)
          MSYSTEM: $(MSYSTEM)
          CHERE_INVOKING: yes

      - script: |
          set MSYS2_ROOT=%CD:~0,2%\msys64
          %MSYS2_ROOT%\cmd\msystem MSYS
          bash -c ".azure/msys2-test.sh"
        displayName: Run Tests
        env:
          MSYS2_ARCH: $(MSYS2_ARCH)
          MSYSTEM: $(MSYSTEM)
          CHERE_INVOKING: yes

      - task: PublishTestResults@2
        condition: not(canceled())
        inputs:
          testResultsFiles: junit/test-results.xml
          testRunTitle: Publish Test Results

      - script: |
          set MSYS2_ROOT=%CD:~0,2%\msys64
          %MSYS2_ROOT%\cmd\msystem MSYS
          bash -c "win-installer/build.sh"
        displayName: Create Windows Binaries
        condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
        env:
          MSYSTEM: $(MSYSTEM)
          CHERE_INVOKING: yes

      - task: CopyFiles@2
        displayName: Copy Windows Binaries
        condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
        inputs:
          sourceFolder: .
          contents: '*.exe'
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: GitHubRelease@0
        condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
        displayName: Create GitHub Release
        inputs:
          gitHubConnection: GaphorConnection
          repositoryName: gaphor/gaphor
          action: create
          tagSource: auto
          target: $(Build.SourceVersion)
          assets: $(Build.ArtifactStagingDirectory)/*.exe
          isDraft: true

  - job: macOS
    dependsOn: Lint
    condition: succeeded()
    pool:
      vmImage: 'macOS-10.13'
    timeoutInMinutes: 60
    variables:
        PKG_CONFIG_PATH: /usr/local/Cellar/libffi/3.2.1/lib/pkgconfig:${PKG_CONFIG_PATH:-}
    steps:
    - script: |
        brew install gobject-introspection gtk+3 adwaita-icon-theme
        source venv
        pip install pytest-xvfb
      displayName: 'Install dependencies'

    - script: |
        source venv
        pytest
      displayName: 'PyTest'
      env:
        PYTEST_ADDOPTS: "--doctest-modules"

    - script: |
        cd macos-dmg
        ./package.sh
      displayName: Create macOS Package

    - task: CopyFiles@2
      displayName: Copy macOS Package
      inputs:
        sourceFolder: macos-dmg
        contents: '*.dmg'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: GitHubRelease@0
      condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
      displayName: Create GitHub Release
      inputs:
        gitHubConnection: GaphorConnection
        repositoryName: gaphor/gaphor
        action: create
        tagSource: auto
        target: $(Build.SourceVersion)
        assets: $(Build.ArtifactStagingDirectory)/*.dmg
        isDraft: true

  - job: Linux
    dependsOn: Lint
    condition: succeeded()
    pool:
      vmImage: 'ubuntu-16.04'
    timeoutInMinutes: 60

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'

    - script: >
        sudo apt-get update -q && sudo apt-get install --no-install-recommends -y
        python3-dev python3-gi python3-gi-cairo gir1.2-gtk-3.0 libgirepository1.0-dev libcairo2-dev
      displayName: Install Ubuntu Dependencies

    - script: |
        source venv
      displayName: Install Python Dependencies

    - script: |
        mkdir -p /home/vsts/.local/share # This can be removed once we merge back to master (config dir)
        source venv
        xvfb-run pytest
      displayName: 'PyTest'
      env:
        PYTEST_ADDOPTS: "--doctest-modules"


    - task: PublishTestResults@2
      condition: not(canceled())
      inputs:
        testResultsFiles: junit/test-results.xml
        testRunTitle: Publish Test Results

    - script: |
        source venv
        poetry build
      displayName: Build Wheel
