? mijn-patch.diff
? refcount-fix.patch
? unref.patch
? examples/dynamic/demo.idl
Index: configure.in
===================================================================
RCS file: /cvs/gnome/orbit-python/configure.in,v
retrieving revision 1.7
diff -u -p -r1.7 configure.in
--- configure.in	24 May 2002 18:50:44 -0000	1.7
+++ configure.in	26 Oct 2002 15:05:16 -0000
@@ -4,7 +4,7 @@ AC_PREREQ(2.52)
 
 m4_define(orbit_python_major_version, 1)
 m4_define(orbit_python_minor_version, 99)
-m4_define(orbit_python_micro_version, 0)
+m4_define(orbit_python_micro_version, 0-ajm)
 m4_define(orbit_python_version, orbit_python_major_version.orbit_python_minor_version.orbit_python_micro_version)
 
 m4_define(linc_required_version,   0.1.6)
Index: orbit-python/corba-object.c
===================================================================
RCS file: /cvs/gnome/orbit-python/orbit-python/corba-object.c,v
retrieving revision 1.2
diff -u -p -r1.2 corba-object.c
--- orbit-python/corba-object.c	31 Jan 2002 14:34:01 -0000	1.2
+++ orbit-python/corba-object.c	26 Oct 2002 15:05:18 -0000
@@ -121,7 +121,7 @@ CORBA_Object_to_PyObject_with_type (CORB
 	}
 
 	inst_glue = g_new0 (CORBA_PyInstance_Glue, 1);
-	inst_glue->obj        = object;
+	inst_glue->obj        = CORBA_Object_duplicate (object, &inst_glue->ev);
 	inst_glue->class_glue = class_glue;
 	inst_glue->repo_id    = repo_id;
 	inst_glue->orb        = orb;
@@ -131,7 +131,8 @@ CORBA_Object_to_PyObject_with_type (CORB
 	CORBA_exception_init (&inst_glue->ev);
 
 	g_hash_table_insert (object_instance_glue, inst, inst_glue);
-	d_message (1, "Created instance %x for %s", (guint)inst, repo_id);
+	d_message (1, "Created instance %x for %s (ref=%d)", (guint)inst,
+			repo_id, object->parent.refs);
 
 	/* take care of that pesky subhash -- create it if necessary */
 	if (!repo_id_to_instance) {
@@ -216,7 +217,8 @@ CORBA_PyClass__del (PyObject *_,
 	if (g_hash_table_size (repo_id_to_instance) == 0) {
 		g_hash_table_remove (object_to_instances_hash, inst_glue->obj);
 		g_hash_table_destroy (repo_id_to_instance);
-		d_message (1, "Freeing CORBA object for this object");
+		d_message (1, "Freeing CORBA object for this object (ref=%d)",
+				 inst_glue->obj->parent.refs);
 		CORBA_Object_release (inst_glue->obj, &inst_glue->ev);
 		CORBA_exception_free (&inst_glue->ev);
 	}
Index: orbit-python/corba-orb.c
===================================================================
RCS file: /cvs/gnome/orbit-python/orbit-python/corba-orb.c,v
retrieving revision 1.2
diff -u -p -r1.2 corba-orb.c
--- orbit-python/corba-orb.c	31 Jan 2002 14:34:01 -0000	1.2
+++ orbit-python/corba-orb.c	26 Oct 2002 15:05:19 -0000
@@ -114,7 +114,8 @@ CORBA_ORB_PyObject__new (CORBA_ORB orb)
 
 	CORBA_exception_init (&self->ev);
 
-	self->obj = orb;
+	self->obj = (CORBA_ORB) CORBA_Object_duplicate ((CORBA_Object)orb, &self->ev);
+	//self->obj = orb;
 	g_hash_table_insert (orb_objects, orb, self);
 	
 	return self;
