check Classifier.substitution, InstanceSpecification.slot.

As always, there is much to do...

- fix stock icon loading (image size versus usage in bars etc.)
- fix accelarators (HOW?)
- Let the item box behave the same way as the toolbox in GIMP.

- Define a proper scheme for flushing models. Currently a lot of elements
  have references around. This has to do with how PyGtk references python
  and C objects. We should do something like: clean all diagram items,
  then clean the rest of the elements in the ElementFactory.

#- Class: Association end properties are shown in the tree view
- Undo/redo functionality doesn;t work as espected
#- Implement and test attribute/operation parser.
#- Convert Data model to use the parsed attributes + operations.
#- Operation is not part of namespace (assoc. should be bi-dir.)

- Make sure than, when a model is loaded and saved again, both save files do
  not differ.

- reordering of model elements doesn't work properly.

- Diagram items should be created for lots of model elements
  (we currently have Actor, UseCase, Comment and the fancy line that connects
   a comment with another model element). Also a buch of relationships are
   already implemented (Generalization, Include, Extend, Dependency).
   Next we should focus on the Association and then some static model elements
   like classes and packages.

- Exporting diagrams to UML XMI, code, images (SVG/png), etc.

- Set up a plugin architecture. Since the internals of gaphor are pretty
  modular, plugins should not be that hard.

- Some nice icons.

More specific:
- Some logic about what classes can be connected to each other should be
  moved from the DiagramItems to the data elements.
- A more pattern driven design (using Factories, Singletons etc.). We're doing
  a pretty good job already, though...
- Let commands determine if they are visible/sensible, instead of a
  has_capability function on the diagram item. This will be much easier with
  gtk+ 2.4.

  Classes have a makeup like this:
	+------------+
	|   <<st>>  o| stereotype: centered, icon: right justified.
	|  *class*   | class name, centered, bold
	+------------+
	|  *name*    | compartment name, centered, bold
	| + attr1    | attribute, operation or wharever
	+------------+
	| ...        |
	+------------+
- Create stereotype, so we can add them to classes.
- How to put things like multiplicity and visibility in a popup menu
- parsers for attributes, operations
- lose (not in a comment box) text
- make generator functions from load() and save()
