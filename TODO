As always, there is much to do...

- Class: Association end properties are shown in the tree view
- Undo/redo functionality doesn;t work as espected

- Make sure than, when a model is loaded and saved again, both save files do
  not differ.

- The application crashes every now and then when items are freed. The cause
  is probably GnomeCanvasItem::canvas, which points to an invalid canvas (the
  canvas has been freed before the items are freed.
- attributes and operations visible for classes.
- deselect doesn't work properly on all elements...
- fix Class implementation.
- add commands for attribute/operation removal.
- Add some sort of ordering in the NamespaceView.
- Items visible/hidden doesn't work properly when opening a diagram.

- reordering of model elements doesn't work properly.

- Diagram items should be created for lots of model elements
  (we currently have Actor, UseCase, Comment and the fancy line that connects
   a comment with another model element). Also a buch of relationships are
   already implemented (Generalization, Include, Extend, Dependency).
   Next we should focus on the Association and then some static model elements
   like classes and packages.

- Exporting diagrams to UML XMI, code, images (SVG/png), etc.

- Set up a plugin architecture. Since the internals of gaphor are pretty
  modular, plugins should not be that hard.

- Some nice icons.

More specific:
- Some logic about what classes can be connected to each other should be
  moved from the DiagramItems to the data elements.
- A more pattern driven design (using Factories, Singletons etc.). We're doing
  a pretty good job already, though...
- Let commands determine if they are visible/sensible, instead of a
  has_capability function on the diagram item. This will be much easier with
  gtk+ 2.4.

  Classes have a makeup like this:
	+------------+
	|   <<st>>  o| stereotype: centered, icon: right justified.
	|  *class*   | class name, centered, bold
	+------------+
	|  *name*    | compartment name, centered, bold
	| + attr1    | attribute, operation or wharever
	+------------+
	| ...        |
	+------------+
- Create stereotype, so we can add them to classes.
- How to put things like multiplicity and visibility in a popup menu
- parsers for attributes, operations
- lose (not in a comment box) text
- make generator functions from load() and save()
