; vim: syntax=scheme:sw=2

; First some helper objects:
;(define-object PlacementTool
;  (parent "DiaTool")
;  (c-name "PlacementTool")
;  (gtype-id "_TYPE_PLACEMENT_TOOL")
;)

;(define-function placement_tool_new
;  (is-constructor-of PlacementTool)
;  (c-name "placement_tool_new")
;  (return-type "DiaTool*")
;  (parameters
;    '("GType" "object_type" )
;    '("PyObject*" "subject" )
;    '("const-gchar*" "first_arg_name")
;  )
;  (varargs #t)
;)

; Model elements:
;
(define-object ModelElement
  ;;(in-module "diagram")
  (parent "DiaCanvasElement")
  (c-name "ModelElement")
  (gtype-id "_TYPE_MODEL_ELEMENT")
  (fields
    '("gboolean" "auto_resize")
    '("PyObject*" "subject")
  )
)

;(define-method get_subject
;  (of-object "ModelElement")
;  (c-name "model_element_get_subject")
;  (return-type "PyObject*")
;)

(define-method set_subject
  (of-object "ModelElement")
  (c-name "model_element_set_subject")
  (return-type "none")
  (parameters
    '("PyObject*" "subject")
  )
)

(define-method element_update
  (of-object "ModelElement")
  (c-name "model_element_element_update")
  (return-type "none")
  (parameters
    '("gchar*" "key")
  )
)

(define-object Comment
  ;(in-module "diagram")
  (parent "ModelElement")
  (c-name "Comment")
  (gtype-id "_TYPE_COMMENT")
)

(define-object CommentLine
  ;(in-module "diagram")
  (parent "DiaCanvasLine")
  (c-name "CommentLine")
  (gtype-id "_TYPE_COMMENT_LINE")
)

(define-object Actor
  ;(in-module "diagram")
  (parent "ModelElement")
  (c-name "Actor")
  (gtype-id "_TYPE_ACTOR")
)

(define-object UseCase
  ;(in-module "diagram")
  (parent "ModelElement")
  (c-name "UseCase")
  (gtype-id "_TYPE_USE_CASE")
)

(define-object Relationship
  (parent "DiaCanvasLine")
  (c-name "Relationship")
  (gtype-id "_TYPE_RELATIONSHIP")
  (fields
    '("PyObject*" "subject")
  )
)

;(define-method get_subject
;  (of-object "Relationship")
;  (c-name "relationship_get_subject")
;  (return-type "PyObject*")
;)

(define-method set_subject
  (of-object "Relationship")
  (c-name "relationship_set_subject")
  (return-type "none")
  (parameters
    '("PyObject*" "subject")
  )
)

(define-method element_update
  (of-object "Relationship")
  (c-name "relationship_element_update")
  (return-type "none")
  (parameters
    '("gchar*" "key")
  )
)

(define-object Generalization
  (parent "Relationship")
  (c-name "Generalization")
  (gtype-id "_TYPE_GENERALIZATION")
)

(define-object Dependency
  (parent "Relationship")
  (c-name "Dependency")
  (gtype-id "_TYPE_DEPENDENCY")
)

(define-object Realization
  (parent "Relationship")
  (c-name "Realization")
  (gtype-id "_TYPE_REALIZATION")
)

(define-object Include
  (parent "Relationship")
  (c-name "Include")
  (gtype-id "_TYPE_INCLUDE")
)

(define-object Extend
  (parent "Relationship")
  (c-name "Extend")
  (gtype-id "_TYPE_EXTEND")
)

