2002-07-03  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/UML/element.py: Fixed bug and changed load() to queue
	signals. Changed postload to flush the queue.
	* gaphor/command: New directory. Here command classes will be stored.
	Simple and more complex operations should be executed through
	commands.
	* *all files*: changed module paths to the project root. So now we
	should include gaphor.UML in stead of UML.

2002-07-02  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* doc/gaphor.dtd: Allow text data in Value tag.
	* gaphor/UML/element.py: Restructured get/set attr stuff. Now it is
	more readable and better usable for e.g. tree models.
	* gaphor/UML/element.py: Changed signal protocol. Now old and new
	values are also parameters.
	* gaphor/diagram/(relationship.py|diagramitem.py|dependency.py):
	new files.
	* gaphor/misc/signal.py: Added signal queueing options (queue(),
	flush())
	* gaphor/misc: Added parsers using both libxml2 or xml.dom.minidom.
	(work in progress).

2002-03-28  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/misc/storage.py: Now use the standard Python XML stuff
	(with expat).
	* Various feature improvements and other nifty things...

2002-03-25  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/diagram/registrar.py: renamed to diagramitemfactory.py and
	created a full blown Factory.
	* gaphor/UML/diagram.py: removed create() method
	
2002-03-23  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/diagram/diagram.py: moved to the UML module.
	* gaphor/misc/storage.py: now contains the load and save methods of
	ElementFactory.

2002-03-19  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* */Makefile.am: fized path for make install
	* gaphor/UML/*.py: made all files lower case.
	* gaphor/UML/elementfactory.py: New file. Factory for creating model
	elements.
	* gaphor/misc/: New directory. Added Makefile.am, singleton.py and
	command.py.
	* gaphor/UML/element.py: put Enumeration_ and Sequence in separate
	files.
	* configure.in: Added dependency for libxml2.
	* doc/gaphor.dtd: New file. DTD for gaphor files.
	* gaphor/UML/elementfactory.py, gaphor/UML/element.py,
	gaphor/diagram/diagram.py, gaphor/diagram/itemstorage.py:
	Use libxml2 calls rather than xmllib (which is depricated anyway).

2002-03-05  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/diagram/relationship.c: (relationship_handle_connect)
	Check if the currently connected subject can be used to set the subject.
	* gaphor/UML/__init__.py: Make dependencies only can connect to 1
	model element.

2002-02-20  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* utils/genUML.py: Changed to make use of the aggregation attribute.
	* gaphor/UML/Element.py: Backup the internal dictionary if no
	presentations are attached to the item.
	* gaphor/UML/__init__.py: Added changes for new genUML.py script.
	* gaphor/diagram/diagramitems.defs: 
	* gaphor/ui/diagramview.py:
	Added items for Dependency, Include, Extend and Realization.
	* gaphor/diagram/diagramitems.override: 
	* gaphor/diagram/generalization.[ch]: Rely on Relationship.
	* gaphor/diagram/model-element.c: Added rules for Dependency and
	Realization.
	* gaphor/diagram/relationship.[ch]: made it work.
	* gaphor/diagram/usecase.c: Added rules for Include and Extend.
	* gaphor/diagram/extend.c: 
	* gaphor/diagram/extend.h: 
	* gaphor/diagram/include.c: 
	* gaphor/diagram/include.h: 
	* gaphor/diagram/realization.c: 
	* gaphor/diagram/realization.h: 
	* gaphor/diagram/dependency.c: 
	* gaphor/diagram/dependency.h:
	New files.
	* gaphor/diagram/itemstorage.py: Storage rules for new elements.

2002-02-14  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/ui/diagramview.py: Added file/load.
	* gaphor/diagram/itemstorage.py: New file. Storage functions for
	the diagram items. Storage format changed: points of lines is now an
	attribute in the item, in stead of a bunch of tags.

2002-02-11  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* doc/storage.txt: Draft about how Relationships should behave... I
	doubt this is the way... but anyway...
	* gaphor/UML/Element.py: Added postload method, will be called after
	load()
	* gaphor/UML/management.py: implemented postload method
	* gaphor/diagram/diagram.py: implemented postload method. Diagrams are
	loaded perfectly!!!
	* gaphor/test-diagram.py: now a diagram is loaded from the file x.xml

2002-02-04  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/UML/Element.py: Added functions add_presentation,
	remove_presentation, remove_presentation_undo, remove_undoability
	and undo_presentation: simple interface for adding and removing diagram
	items from model elements.
	* gaphor/diagram/classifier.c: Now the `namespace' attribute is removed
	from classifiers if they have no items in the subject.presentation list.
	* gaphor/diagram/common.c: works well with classifier stuff, implemented
	changes in UML.Element interface.

2002-01-26  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/UML/Element.py: Added unlink() method. This should be called
	  before the object is destroyed.
	* gaphor/diagram/usecase.c: Added use_case_handle_motion(), so
	  text will remain centered even if the box is resized.

2002-01-26  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/UML/Element.py: Added signals
	* gaphor/diagram/classifier.[ch],
	  gaphor/diagram/relationship.[ch],
	  gaphor/diagram/generalization.[ch]: New files.

2002-01-12  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/diagram/comment-line.[ch]: New file: a line that connects a
	  model element with a comment.

2002-01-09  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/diagram/*: implemented Comment class (and actor class
	  basically)
2001-12-29  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor/UML/Element.py: Reimplemented, now all sorts of relations
	  work properly.

2001-10-26  Arjan Molenaar  <arjanmolenaar@hetnet.nl>

	* gaphor: initial version.

